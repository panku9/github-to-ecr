{"ast":null,"code":"import _asyncToGenerator from\"/var/www/html/ecs-repo/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";import _regeneratorRuntime from\"/var/www/html/ecs-repo/node_modules/@babel/runtime/regenerator/index.js\";import axios from\"axios\";import apis from\"../../services/Apis\";import{ActionTypes}from\"../constants/action-types\";import Auth from\"../../services/Auth\";export var getDashboardCount=function getDashboardCount(){return/*#__PURE__*/function(){var _ref=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(dispatch){return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:axios.get(apis.BASE+apis.GET_DASHBOARD_COUNT,{headers:{'Authorization':\"Bearer \".concat(Auth.retriveToken())}}).then(function(response){if(response.data.success){dispatch({type:ActionTypes.DASHBOARD_COUNT,payload:{activeStudent:response.data.activeStudent,activeSubject:response.data.activeSubject,activeTeacher:response.data.activeTeacher,blockedStudent:response.data.blockedStudent,blockedSubject:response.data.blockedSubject,blockedTeacher:response.data.blockedTeacher,retrived:true}});}});case 1:case\"end\":return _context.stop();}}},_callee);}));return function(_x){return _ref.apply(this,arguments);};}();};","map":{"version":3,"sources":["/var/www/html/ecs-repo/src/redux/actions/dashboardDetails.js"],"names":["axios","apis","ActionTypes","Auth","getDashboardCount","dispatch","get","BASE","GET_DASHBOARD_COUNT","headers","retriveToken","then","response","data","success","type","DASHBOARD_COUNT","payload","activeStudent","activeSubject","activeTeacher","blockedStudent","blockedSubject","blockedTeacher","retrived"],"mappings":"2NAAA,MAAOA,CAAAA,KAAP,KAAkB,OAAlB,CACA,MAAOC,CAAAA,IAAP,KAAiB,qBAAjB,CACA,OAASC,WAAT,KAA4B,2BAA5B,CACA,MAAOC,CAAAA,IAAP,KAAiB,qBAAjB,CAEA,MAAO,IAAMC,CAAAA,iBAAiB,CAAG,QAApBA,CAAAA,iBAAoB,EAAM,CACrC,+FAAO,iBAAMC,QAAN,kHACLL,KAAK,CAACM,GAAN,CAAUL,IAAI,CAACM,IAAL,CAAYN,IAAI,CAACO,mBAA3B,CAAgD,CAC9CC,OAAO,CAAG,CACR,iCAA0BN,IAAI,CAACO,YAAL,EAA1B,CADQ,CADoC,CAAhD,EAIGC,IAJH,CAIQ,SAAAC,QAAQ,CAAI,CAClB,GAAGA,QAAQ,CAACC,IAAT,CAAcC,OAAjB,CAA0B,CACxBT,QAAQ,CAAC,CACPU,IAAI,CAAEb,WAAW,CAACc,eADX,CAEPC,OAAO,CAAG,CACRC,aAAa,CAAEN,QAAQ,CAACC,IAAT,CAAcK,aADrB,CAERC,aAAa,CAAEP,QAAQ,CAACC,IAAT,CAAcM,aAFrB,CAGRC,aAAa,CAAER,QAAQ,CAACC,IAAT,CAAcO,aAHrB,CAIRC,cAAc,CAAET,QAAQ,CAACC,IAAT,CAAcQ,cAJtB,CAKRC,cAAc,CAAEV,QAAQ,CAACC,IAAT,CAAcS,cALtB,CAMRC,cAAc,CAAEX,QAAQ,CAACC,IAAT,CAAcU,cANtB,CAORC,QAAQ,CAAG,IAPH,CAFH,CAAD,CAAR,CAYD,CACF,CAnBD,EADK,sDAAP,+DAsBD,CAvBM","sourcesContent":["import axios from \"axios\"\nimport apis from \"../../services/Apis\"\nimport { ActionTypes } from \"../constants/action-types\"\nimport Auth from \"../../services/Auth\"\n\nexport const getDashboardCount = () => {\n  return async(dispatch) => {\n    axios.get(apis.BASE + apis.GET_DASHBOARD_COUNT, {\n      headers : {\n        'Authorization':`Bearer ${Auth.retriveToken()}`\n      }\n    }).then(response => {\n      if(response.data.success) {\n        dispatch({\n          type: ActionTypes.DASHBOARD_COUNT,\n          payload : {\n            activeStudent: response.data.activeStudent,\n            activeSubject: response.data.activeSubject,\n            activeTeacher: response.data.activeTeacher,\n            blockedStudent: response.data.blockedStudent,\n            blockedSubject: response.data.blockedSubject,\n            blockedTeacher: response.data.blockedTeacher,\n            retrived : true\n          }\n        })\n      }\n    })\n  }\n}"]},"metadata":{},"sourceType":"module"}
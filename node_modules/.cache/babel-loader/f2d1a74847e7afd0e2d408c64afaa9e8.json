{"ast":null,"code":"var _jsxFileName = \"/var/www/html/ecs-repo/src/redux/actions/loginAction.js\";\nimport axios from \"axios\";\nimport apis from \"../../services/Apis\";\nimport { ActionTypes } from \"../constants/action-types\";\nimport Auth from \"../../services/Auth\";\nimport Alert from \"../../services/alert\";\nimport { Navigate } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const loginUser = details => {\n  return async (dispatch, getState) => {\n    const response = await axios.post(apis.BASE + apis.LOGIN, details);\n\n    if (response.data.success) {\n      Auth.storeToken(response.data.token);\n      dispatch({\n        type: ActionTypes.LOGIN,\n        payload: {\n          isLoggedIn: true,\n          userDetails: response.data.admin\n        }\n      });\n    } else {\n      Auth.deleteToken();\n      return Alert('error', 'invalid data', response.data.message);\n    }\n  };\n};\nexport const getAdminDetails = () => {\n  return async dispatch => {\n    axios.get(apis.BASE + apis.GET_ADMIN_DETAILS, {\n      headers: {\n        'Authorization': `Bearer ${Auth.retriveToken()}`\n      }\n    }).then(response => {\n      if (response.data.success) {\n        dispatch({\n          type: ActionTypes.LOGIN,\n          payload: {\n            isLoggedIn: true,\n            userDetails: response.data.user\n          }\n        });\n      } else {\n        Auth.deleteToken();\n        return /*#__PURE__*/_jsxDEV(Navigate, {\n          to: \"/\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 19\n        }, this);\n      }\n    }).catch(err => {\n      console.log(err);\n      Auth.deleteToken();\n      return /*#__PURE__*/_jsxDEV(Navigate, {\n        to: \"/\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 15\n      }, this);\n    });\n  };\n};\nexport const logoutUser = () => dispatch => {\n  Auth.deleteToken();\n  dispatch({\n    type: ActionTypes.LOGOUT,\n    payload: 'Manual Logout'\n  });\n};","map":{"version":3,"sources":["/var/www/html/ecs-repo/src/redux/actions/loginAction.js"],"names":["axios","apis","ActionTypes","Auth","Alert","Navigate","loginUser","details","dispatch","getState","response","post","BASE","LOGIN","data","success","storeToken","token","type","payload","isLoggedIn","userDetails","admin","deleteToken","message","getAdminDetails","get","GET_ADMIN_DETAILS","headers","retriveToken","then","user","catch","err","console","log","logoutUser","LOGOUT"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,IAAP,MAAiB,qBAAjB;AACA,SAASC,WAAT,QAA4B,2BAA5B;AACA,OAAOC,IAAP,MAAiB,qBAAjB;AACA,OAAOC,KAAP,MAAkB,sBAAlB;AACA,SAASC,QAAT,QAAyB,kBAAzB;;AAEA,OAAO,MAAMC,SAAS,GAAIC,OAAD,IAAa;AACpC,SAAO,OAAMC,QAAN,EAAgBC,QAAhB,KAA6B;AAClC,UAAMC,QAAQ,GAAG,MAAMV,KAAK,CAACW,IAAN,CAAWV,IAAI,CAACW,IAAL,GAAWX,IAAI,CAACY,KAA3B,EAAiCN,OAAjC,CAAvB;;AACA,QAAGG,QAAQ,CAACI,IAAT,CAAcC,OAAjB,EAA0B;AACxBZ,MAAAA,IAAI,CAACa,UAAL,CAAgBN,QAAQ,CAACI,IAAT,CAAcG,KAA9B;AACAT,MAAAA,QAAQ,CAAE;AACRU,QAAAA,IAAI,EAAEhB,WAAW,CAACW,KADV;AAERM,QAAAA,OAAO,EAAG;AACRC,UAAAA,UAAU,EAAG,IADL;AAERC,UAAAA,WAAW,EAAGX,QAAQ,CAACI,IAAT,CAAcQ;AAFpB;AAFF,OAAF,CAAR;AAOD,KATD,MASO;AACLnB,MAAAA,IAAI,CAACoB,WAAL;AACA,aAAOnB,KAAK,CAAC,OAAD,EAAS,cAAT,EAAwBM,QAAQ,CAACI,IAAT,CAAcU,OAAtC,CAAZ;AACD;AACF,GAfD;AAgBD,CAjBM;AAmBP,OAAO,MAAMC,eAAe,GAAG,MAAM;AACnC,SAAO,MAAMjB,QAAN,IAAmB;AACxBR,IAAAA,KAAK,CAAC0B,GAAN,CAAUzB,IAAI,CAACW,IAAL,GAAUX,IAAI,CAAC0B,iBAAzB,EAA4C;AAC1CC,MAAAA,OAAO,EAAC;AACN,yBAAiB,UAASzB,IAAI,CAAC0B,YAAL,EAAoB;AADxC;AADkC,KAA5C,EAIGC,IAJH,CAIQpB,QAAQ,IAAI;AAEhB,UAAGA,QAAQ,CAACI,IAAT,CAAcC,OAAjB,EAA0B;AACxBP,QAAAA,QAAQ,CAAC;AACPU,UAAAA,IAAI,EAAChB,WAAW,CAACW,KADV;AAEPM,UAAAA,OAAO,EAAE;AACPC,YAAAA,UAAU,EAAG,IADN;AAEPC,YAAAA,WAAW,EAAGX,QAAQ,CAACI,IAAT,CAAciB;AAFrB;AAFF,SAAD,CAAR;AAOD,OARD,MAQO;AACL5B,QAAAA,IAAI,CAACoB,WAAL;AACA,4BAAQ,QAAC,QAAD;AAAU,UAAA,EAAE,EAAC;AAAb;AAAA;AAAA;AAAA;AAAA,gBAAR;AACD;AAEJ,KAnBD,EAmBGS,KAnBH,CAmBSC,GAAG,IAAI;AACdC,MAAAA,OAAO,CAACC,GAAR,CAAYF,GAAZ;AACA9B,MAAAA,IAAI,CAACoB,WAAL;AACA,0BAAQ,QAAC,QAAD;AAAU,QAAA,EAAE,EAAC;AAAb;AAAA;AAAA;AAAA;AAAA,cAAR;AACD,KAvBD;AAyBD,GA1BD;AA2BD,CA5BM;AA8BP,OAAO,MAAMa,UAAU,GAAG,MAAK5B,QAAQ,IAAG;AACxCL,EAAAA,IAAI,CAACoB,WAAL;AACAf,EAAAA,QAAQ,CAAC;AACNU,IAAAA,IAAI,EAAGhB,WAAW,CAACmC,MADb;AAENlB,IAAAA,OAAO,EAAG;AAFJ,GAAD,CAAR;AAID,CANM","sourcesContent":["import axios from \"axios\"\nimport apis from \"../../services/Apis\";\nimport { ActionTypes } from \"../constants/action-types\";\nimport Auth from \"../../services/Auth\";\nimport Alert from \"../../services/alert\";\nimport { Navigate } from \"react-router-dom\";\n\nexport const loginUser = (details) => {\n  return async(dispatch, getState) => {\n    const response = await axios.post(apis.BASE+ apis.LOGIN,details);\n    if(response.data.success) {\n      Auth.storeToken(response.data.token);\n      dispatch( {\n        type: ActionTypes.LOGIN,\n        payload : {\n          isLoggedIn : true,\n          userDetails : response.data.admin\n        }\n      })\n    } else {\n      Auth.deleteToken();\n      return Alert('error','invalid data',response.data.message);\n    }\n  }\n}\n\nexport const getAdminDetails = () => {\n  return async(dispatch) => {\n    axios.get(apis.BASE+apis.GET_ADMIN_DETAILS, {\n      headers:{\n        'Authorization':`Bearer ${Auth.retriveToken()}`\n      }\n    }).then(response => {\n      \n        if(response.data.success) {\n          dispatch({\n            type:ActionTypes.LOGIN,\n            payload: {\n              isLoggedIn : true,\n              userDetails : response.data.user\n            }\n          })\n        } else {\n          Auth.deleteToken();\n          return (<Navigate to=\"/\"/>);\n        }\n      \n    }).catch(err => {\n      console.log(err);\n      Auth.deleteToken();\n      return (<Navigate to=\"/\"/>);\n    })\n    \n  }\n}\n\nexport const logoutUser = ()=> dispatch =>{\n  Auth.deleteToken();\n  dispatch({\n     type : ActionTypes.LOGOUT,\n     payload : 'Manual Logout'\n  })\n}"]},"metadata":{},"sourceType":"module"}
{"ast":null,"code":"import _asyncToGenerator from\"/var/www/html/ecs-repo/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";import _regeneratorRuntime from\"/var/www/html/ecs-repo/node_modules/@babel/runtime/regenerator/index.js\";import axios from\"axios\";import apis from\"../../services/Apis\";import{ActionTypes}from\"../constants/action-types\";import Auth from\"../../services/Auth\";export var getStudentDetails=function getStudentDetails(){return/*#__PURE__*/function(){var _ref=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(dispatch){return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:axios.get(apis.BASE+apis.GET_STUDENT_DETAILS,{headers:{'Authorization':\"Bearer \".concat(Auth.retriveToken())}}).then(function(response){if(response.data.success){dispatch({type:ActionTypes.GET_ALL_STUDENT,payload:{studentlist:response.data.students}});}});case 1:case\"end\":return _context.stop();}}},_callee);}));return function(_x){return _ref.apply(this,arguments);};}();};export var StudentToggleStatus=function StudentToggleStatus(status,id,callback){var apisuffix=status?apis.REMOVE_USER:apis.UNBLOCK_USER;return/*#__PURE__*/_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee2(){return _regeneratorRuntime.wrap(function _callee2$(_context2){while(1){switch(_context2.prev=_context2.next){case 0:_context2.next=2;return axios.post(apis.BASE+apisuffix,{_id:id},{headers:{'Authorization':\"Bearer \".concat(Auth.retriveToken())}}).then(function(response){if(response.data.success){callback();}else{console.log(response.data);}});case 2:case\"end\":return _context2.stop();}}},_callee2);}));};","map":{"version":3,"sources":["/var/www/html/ecs-repo/src/redux/actions/studentDetails.js"],"names":["axios","apis","ActionTypes","Auth","getStudentDetails","dispatch","get","BASE","GET_STUDENT_DETAILS","headers","retriveToken","then","response","data","success","type","GET_ALL_STUDENT","payload","studentlist","students","StudentToggleStatus","status","id","callback","apisuffix","REMOVE_USER","UNBLOCK_USER","post","_id","console","log"],"mappings":"2NAAA,MAAOA,CAAAA,KAAP,KAAkB,OAAlB,CACA,MAAOC,CAAAA,IAAP,KAAiB,qBAAjB,CACA,OAASC,WAAT,KAA4B,2BAA5B,CACA,MAAOC,CAAAA,IAAP,KAAiB,qBAAjB,CAGA,MAAO,IAAMC,CAAAA,iBAAiB,CAAG,QAApBA,CAAAA,iBAAoB,EAAM,CACnC,+FAAO,iBAAMC,QAAN,kHACLL,KAAK,CAACM,GAAN,CAAUL,IAAI,CAACM,IAAL,CAAYN,IAAI,CAACO,mBAA3B,CAAgD,CAC9CC,OAAO,CAAG,CACR,iCAA0BN,IAAI,CAACO,YAAL,EAA1B,CADQ,CADoC,CAAhD,EAIGC,IAJH,CAIQ,SAAAC,QAAQ,CAAI,CAElB,GAAGA,QAAQ,CAACC,IAAT,CAAcC,OAAjB,CAA0B,CACxBT,QAAQ,CAAC,CACPU,IAAI,CAAEb,WAAW,CAACc,eADX,CAEPC,OAAO,CAAG,CACRC,WAAW,CAAGN,QAAQ,CAACC,IAAT,CAAcM,QADpB,CAFH,CAAD,CAAR,CAMD,CACF,CAdD,EADK,sDAAP,+DAiBH,CAlBM,CAoBP,MAAO,IAAMC,CAAAA,mBAAmB,CAAG,QAAtBA,CAAAA,mBAAsB,CAACC,MAAD,CAAQC,EAAR,CAAWC,QAAX,CAAwB,CACzD,GAAIC,CAAAA,SAAS,CAAGH,MAAM,CAAGpB,IAAI,CAACwB,WAAR,CAAsBxB,IAAI,CAACyB,YAAjD,CACA,2EAAO,+JACC1B,CAAAA,KAAK,CAAC2B,IAAN,CAAW1B,IAAI,CAACM,IAAL,CAAYiB,SAAvB,CAAiC,CACrCI,GAAG,CAAGN,EAD+B,CAAjC,CAEJ,CACAb,OAAO,CAAC,CACN,iCAA0BN,IAAI,CAACO,YAAL,EAA1B,CADM,CADR,CAFI,EAMHC,IANG,CAME,SAAAC,QAAQ,CAAI,CAClB,GAAGA,QAAQ,CAACC,IAAT,CAAcC,OAAjB,CAA0B,CACxBS,QAAQ,GACT,CAFD,IAEO,CACLM,OAAO,CAACC,GAAR,CAAYlB,QAAQ,CAACC,IAArB,EACD,CACF,CAZK,CADD,yDAAP,GAgBD,CAlBM","sourcesContent":["import axios from \"axios\"\nimport apis from \"../../services/Apis\"\nimport { ActionTypes } from \"../constants/action-types\"\nimport Auth from \"../../services/Auth\"\n\n\nexport const getStudentDetails = () => {\n    return async(dispatch) => {\n      axios.get(apis.BASE + apis.GET_STUDENT_DETAILS, {\n        headers : {\n          'Authorization':`Bearer ${Auth.retriveToken()}`\n        }\n      }).then(response => {\n\n        if(response.data.success) {\n          dispatch({\n            type: ActionTypes.GET_ALL_STUDENT,\n            payload : {\n              studentlist : response.data.students\n            }\n          })\n        }\n      })\n    }\n}\n\nexport const StudentToggleStatus = (status,id,callback) => {\n  var apisuffix = status ? apis.REMOVE_USER : apis.UNBLOCK_USER;\n  return async() => {\n    await axios.post(apis.BASE + apisuffix,{\n      _id : id\n    },{\n      headers:{\n        'Authorization':`Bearer ${Auth.retriveToken()}`\n      }\n    }).then(response => {\n      if(response.data.success) {\n        callback();\n      } else {\n        console.log(response.data);\n      }\n    })\n  }\n  \n}"]},"metadata":{},"sourceType":"module"}